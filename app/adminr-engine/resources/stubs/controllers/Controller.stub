<?php

namespace App\Http\Controllers\Admin;

use App\Models\{{MODEL_CLASS}};
use Illuminate\Http\Request;
use Illuminate\Support\Str;
use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\View\View;
{{FOREIGN_ENTITY_USE}}

class {{CONTROLLER_CLASS}} extends Controller
{
    private int $resultLimit;

    public function __construct(){
        $this->resultLimit = {{RESULT_LIMIT}};
    }

    public function index(Request $request): View|RedirectResponse
    {
        try {
            ${{MODEL_ENTITIES}} = {{MODEL_CLASS}}::query();
            {{SEARCH_STATEMENTS}}
            {{TRASHED_FILTER}}
            ${{MODEL_ENTITIES}} = ${{MODEL_ENTITIES}}->paginate($this->resultLimit);
            return view('adminr.{{MODEL_ENTITIES}}.index', compact('{{MODEL_ENTITIES}}'));
        } catch(\Exception $e){
            return $this->backError('Error: ' . $e->getMessage());
        }
    }

    public function show({{MODEL_CLASS}} ${{MODEL_ENTITY}}): View|RedirectResponse
    {
        try{
            return view('adminr.{{MODEL_ENTITIES}}.show', compact('{{MODEL_ENTITY}}'));
        } catch(\Exception $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function create(): View|RedirectResponse
    {
        try{
            {{FOREIGN_ENTITY_DATA}}
            return view('adminr.{{MODEL_ENTITIES}}.create'{{FOREIGN_ENTITY_CREATE}});
        } catch(\Exception $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function store(Request $request): RedirectResponse
    {
        try{
            {{VALIDATION_STATEMENT}}

            {{FILE_UPLOAD_STATEMENT}}
            {{MODEL_CLASS}}::create([
                {{SAVE_DATA_STATEMENT}}
            ]);

            return $this->redirectSuccess(route(config('adminr.route_prefix').'.{{MODEL_ENTITIES}}.index'), "{{MODEL_ENTITY}} saved successfully!");
        } catch(\Exception $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function edit({{MODEL_CLASS}} ${{MODEL_ENTITY}}): View|RedirectResponse
    {
        try{
            {{FOREIGN_ENTITY_DATA}}
            return view('adminr.{{MODEL_ENTITIES}}.edit', compact('{{MODEL_ENTITY}}'{{FOREIGN_ENTITY}}));
        } catch(\Exception $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function update(Request $request, {{MODEL_CLASS}} ${{MODEL_ENTITY}}): RedirectResponse
    {
        try{
            {{UPDATE_VALIDATION_STATEMENT}}

            {{FILE_UPDATE_STATEMENT}}
            ${{MODEL_ENTITY}}->update([
                {{UPDATE_DATA_STATEMENT}}
            ]);

            return $this->redirectSuccess(route(config('adminr.route_prefix').'.{{MODEL_ENTITIES}}.index'), "{{MODEL_ENTITY}} updated successfully!");
        } catch(\Exception $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function destroy($id): RedirectResponse
    {
        try{
            ${{MODEL_ENTITY}} = {{MODEL_CLASS}}::findOrFail($id);

            {{DELETE_FILE_STATEMENT}}
            ${{MODEL_ENTITY}}->delete();
            return $this->backSuccess("{{MODEL_ENTITY}} deleted successfully!");
        } catch(\Exception $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }
}
