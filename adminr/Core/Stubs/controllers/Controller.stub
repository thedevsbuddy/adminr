<?php

namespace Adminr\Resources\{{RESOURCE_NAME}}\Http\Controllers;

use Adminr\Resources\{{RESOURCE_NAME}}\Models\{{MODEL_CLASS}};
use Illuminate\Support\Str;
use Adminr\Core\Http\Controllers\AdminrBaseController;
use Illuminate\Http\RedirectResponse;
use Illuminate\View\View;
use Adminr\Resources\{{RESOURCE_NAME}}\Http\Requests\{{{CREATE_REQUEST_CLASS}},{{UPDATE_REQUEST_CLASS}}};
{{FOREIGN_ENTITY_USE}}

class {{CONTROLLER_CLASS}} extends AdminrBaseController
{
    public function index(): View|RedirectResponse
    {
        try {
            {{INDEX_QUERY}}
            return view('adminr.{{MODEL_ENTITIES}}.index', compact('{{MODEL_ENTITIES}}'));
        } catch(\Exception | \Error $e){
            return $this->backError('Error: ' . $e->getMessage());
        }
    }

    public function show({{MODEL_CLASS}} ${{MODEL_ENTITY}}): View|RedirectResponse
    {
        try{
            return view('adminr.{{MODEL_ENTITIES}}.show', compact('{{MODEL_ENTITY}}'));
        } catch(\Exception | \Error $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function create(): View|RedirectResponse
    {
        try{
            {{FOREIGN_ENTITY_DATA}}
            return view('adminr.{{MODEL_ENTITIES}}.create'{{FOREIGN_ENTITY_CREATE}});
        } catch(\Exception | \Error $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function store({{CREATE_REQUEST_CLASS}} $request): RedirectResponse
    {
        try{
            {{FILE_UPLOAD_STATEMENT}}
            {{MODEL_CLASS}}::create([
                {{SAVE_DATA_STATEMENT}}
            ]);

            return $this->redirectSuccess(route('adminr.{{MODEL_ENTITIES}}.index'), "{{MODEL_CLASS}} saved successfully!");
        } catch(\Exception | \Error $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function edit({{MODEL_CLASS}} ${{MODEL_ENTITY}}): View|RedirectResponse
    {
        try{
            {{FOREIGN_ENTITY_DATA}}
            return view('adminr.{{MODEL_ENTITIES}}.edit', compact('{{MODEL_ENTITY}}'{{FOREIGN_ENTITY}}));
        } catch(\Exception | \Error $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function update({{UPDATE_REQUEST_CLASS}} $request, {{MODEL_CLASS}} ${{MODEL_ENTITY}}): RedirectResponse
    {
        try{
            {{FILE_UPDATE_STATEMENT}}
            ${{MODEL_ENTITY}}->update([
                {{UPDATE_DATA_STATEMENT}}
            ]);

            return $this->redirectSuccess(route( 'adminr.{{MODEL_ENTITIES}}.index'), "{{MODEL_ENTITY}} updated successfully!");
        } catch(\Exception | \Error $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }

    public function destroy($id): RedirectResponse
    {
        try{
            ${{MODEL_ENTITY}} = {{MODEL_CLASS}}::findOrFail($id);

            {{DELETE_FILE_STATEMENT}}
            ${{MODEL_ENTITY}}->delete();
            return $this->backSuccess("{{MODEL_ENTITY}} deleted successfully!");
        } catch(\Exception | \Error $e){
            return $this->backError("Error: " . $e->getMessage());
        }
    }
}
